import java.nio.file.Files
import java.nio.file.Paths
import java.util.zip.GZIPOutputStream
import java.util.zip.GZIPInputStream

ext {
	dojoBuildDir = "$buildDir/dojoBuild"
}

task clean {
	doLast {
		delete buildDir
	}
}

task init {
	doLast {
		File dir = file(dojoBuildDir)
		dir.mkdirs()
	}
}

task unzipDojo(dependsOn: 'init', type: Copy) {
	from zipTree(file("$projectDir/$dojoSrcArchive"))
	into dojoBuildDir
	eachFile { fcp ->
    	fcp.path = fcp.path.replaceFirst("^dojo-.*-src", '')
  	}
}

task copyFiles(dependsOn: 'unzipDojo') {
	doLast {
		copy {
			from "$projectDir/ecm"
			into "$dojoBuildDir/ecm"
			include '**/*'
			exclude 'test/**'
			exclude '**/*.jgz'
			exclude 'nls/ecm_*.js'
		}

		copy {
			from projectDir
			into "$dojoBuildDir/ecm"
			include "$projectDir/nls.profile.js"
		}
	}
}

task shrinkFiles(dependsOn: 'copyFiles', type: JavaExec) {
	main = 'org.mozilla.javascript.tools.shell.Main'
	classpath = files("$dojoBuildDir/util/shrinksafe/js.jar", "$dojoBuildDir/util/shrinksafe/shrinksafe.jar")
	args "$dojoBuildDir/dojo/dojo.js", '--release', "baseUrl=$dojoBuildDir/dojo", "profile=$projectDir/nls.profile.js", 'load=build'
}

task buildBundles(dependsOn: 'shrinkFiles') {
	doLast {
		file("$dojoBuildDir/release/ecm/nls").eachFile {
			if (it.name.startsWith("ecm_") && !it.name.endsWith("uncompressed.js")) {
				gzipFile("$dojoBuildDir/release/ecm/nls", it.name)
			}
		}
		
		reCompress.execute()
	}
}

task reCompress() {
	doLast {		
		copy {
			from "$projectDir/ecm/ecm.js.jgz"
			into "$buildDir"
		}		

		// update locales in ecm.js.jgz of ICN
		updateLocalesInGzip("$buildDir", "ecm.js")
	}
}

def gzipFile(sourcePath, sourceFile) {
	GZIPOutputStream gos = new GZIPOutputStream(new FileOutputStream("$buildDir/$sourceFile" + ".jgz"))
	Files.copy(Paths.get("$sourcePath/$sourceFile"), gos)
	gos.close()
}

def updateLocalesInGzip(sourcePath, sourceFile) {
	// decompress the original jgz
	String origFilePath = Paths.get("$sourcePath/$sourceFile" + ".orig.js");
	delete origFilePath
	GZIPInputStream gin = new GZIPInputStream(new FileInputStream("$sourcePath/$sourceFile" + ".jgz"))
	Files.copy(gin, Paths.get(origFilePath))
	gin.close()

	// path of uncompressed file
	String filePath = Paths.get("$sourcePath/$sourceFile");

	// add extra locales
	String[] locales = "$extraLocales".split(",")		
	file(origFilePath).withInputStream { stream ->
		file(filePath).withWriter { writer ->
			stream.eachLine { line ->
				int index = line.indexOf(",\\\"ROOT")
				if(index > 0) {
					String newLine = line.substring(0, index) 
					locales.each { locale ->
						newLine = newLine + ",\\\"" + locale + "\\\""
					}
					newLine = newLine + line.substring(index) 
					writer.writeLine newLine
				} else {
					writer.writeLine line
				}
			}
		}
	}

	// compress the updated file
	gzipFile("$buildDir", "ecm.js")
}
